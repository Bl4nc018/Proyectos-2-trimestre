openapi: "3.0.0"
info:
  version: 1.0.0
  title: AirPeekAPI
  description: Esta api sirve para controlar tanto los usuarios de Airpeek como los vuelos.
servers:
  - url: http://localhost:8000
tags:
  - name: User
    description: User actions 
  - name: Flights
    description: Flights info
paths:
  /login:
    post:
      tags:
        - User
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: email
          in: query
          required: true
          description: The email of the user
          schema:
            type: string 
        - name: password
          in: query
          required: true
          description: The password of the user
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Email exists and password is correct
          content:
            application/json:    
              schema:
                example:
                  token: 19273348274832
        400:
          description: The content of one of the parameters is invalid ## Uno de los campos es inválido.
          content:
            application/json:
              schema:
                example:
                  token: One of the fields is invalid
  /register:
    post:
      tags:
        - User
      summary: Register a new user
      parameters:
        - name: name
          in: query
          required: true
          description: The full name of the user
          schema:
            type: string
        - name: email
          in: query
          required: true
          description: The email of the user
          schema:
            type: string
          example: "matusalen@fpcoruna.afundacion.org"
        - name: country
          in: query
          required: true
          description: The user's home country
          schema:
            type: string
          example: "España"
        - name: password
          in: query
          required: true
          description: The user's password
          schema:
            type: string
        - name: birthdate
          in: query
          required: true
          description: The user's birthdate
          schema:
            type: string
          example: "24/03/2001"
      responses:
        200:
          description: User registered
          content:
            application/json:    
              schema:
                example:
                  register: ok
        400:
          description: One of the parameters is not valid
          content:
            application/json:    
              schema:
                example:
                  register: not_ok
        409:
          description: Email already registered
          content:
            application/json:
              schema:
                example:
                  register: already_exists
  /profile:
    get:
      tags:
        - User
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        200:
          description: User profile retrieved
          content:
            application/json:    
              schema:
                type: object
                properties:
                  image:
                    schema:
                      type: string
                      format: binary
                  name:
                    type: string
                  email:
                    type: string
                  country:
                    type: string
                  birthdate:
                    type: string
  /edit_profile:
    put:
      tags:
        - User
      summary: Update user profile
      security:
        - bearerAuth: []
      parameters:
        - name: name
          in: query
          required: true
          description: The full name of the user
          schema:
            type: string
        - name: email
          in: query
          required: true
          description: The email of the user
          schema:
            type: string
          example: "matusalen@fpcoruna.afundacion.org"
        - name: country
          in: query
          required: true
          description: The user's home country
          schema:
            type: string
          example: "España"
        - name: password
          in: query
          required: true
          description: The user's password
          schema:
            type: string
        - name: birthdate
          in: query
          required: true
          description: The user's birthdate
          schema:
            type: string
          example: "24/03/2001"
        - name: image
          in: query
          required: false
          description: The user's profile image
          schema:
            type: string
            format: binary 
      responses:
        200:
          description: User profile updated
          content:
            application/json:    
              schema:
                example:
                  update: ok
        400:
          description: Any parameter is not valid
          content:
            application/json:    
              schema:
                example:
                  update: not_ok
  /delete_account:
    delete:
      tags:
        - User
      summary: Delete user account
      security:
        - bearerAuth: []
      responses:
        200:
          description: User account deleted
          content:
            application/json:    
              schema:
                example:
                  delete: ok
        401:
          description: Unauthorized
          content:
            application/json:    
              schema:
                example:
                  message: Unauthorized
  /search_flights:
    get:
      tags:
        - Flights
      summary: Returns searched flights
      parameters:
        - name: origin
          in: query
          required: true
          description: Where the flight should depart from
          schema:
            type: string
            example: "LPA"
        - name: destination
          in: query
          required: true
          description: Where the flight should arrive at
          schema:
            type: string
          example: "AOK"
        - name: d_date
          in: query
          required: true
          description: The departure date
          schema:
            type: string
            example: "24/03/2001"
        - name: r_date
          in: query
          required: false
          description: The return date
          schema:
            type: string
          example: "27/03/2001"
        - name: adults
          in: query
          required: true
          description: The number of adults
          schema:
            type: integer
        # the following two may or may not actually do anything more than increasing the number of adults
        - name: children
          in: query
          required: true
          description: The number of children
          schema:
            type: integer
        - name: toddlers
          in: query
          required: true
          description: The number of toddlers
          schema:
            type: integer
        - name: bidirectional
          in: query
          required: true
          description: Whether a return flight should also be looked in tandem
          schema:
            type: boolean
          example: True
      responses:
          200:
            description: Successful retrieval of flights
            content:
              application/json:    
                schema:
                  example:
                    flights: 
                      cheap:
                          - departure_time: "08:40"
                            arrival_time: "10:50"
                            date: "27/03/2001"
                            departure_location: "LPA"
                            arrival_location: "AOK"
                            price: 50
                          - departure_time: "10:40"
                            arrival_time: "13:50"
                            date: "27/03/2001"
                            departure_location: "LPA"
                            arrival_location: "AOK"
                            price: 70                       
                          - departure_time: "11:25"
                            arrival_time: "14:10"
                            date: "27/03/2001"
                            departure_location: "LPA"
                            arrival_location: "AOK"
                            price: 90
                      fast:
                        - departure_time: "11:25"
                          arrival_time: "11:55"
                          date: "27/03/2001"
                          departure_location: "LPA"
                          arrival_location: "AOK"
                          price: 200
                        - departure_time: "11:25"
                          arrival_time: "12:06"
                          date: "27/03/2001"
                          departure_location: "LPA"
                          arrival_location: "AOK"
                          price: 230
                        - departure_time: "11:25"
                          arrival_time: "12:15"
                          date: "27/03/2001"
                          departure_location: "LPA"
                          arrival_location: "AOK"
                          price: 300
          400:
            description: Something went wrong (Client Error)
            content:
              application/json:    
                schema:
                  example:
                    flights: not_ok
          500:
            description: Something went wrong (Server Error)
            content:
              application/json:    
                schema:
                  example:
                    flights: not_ok
  /user_flights:
    get:
      tags:
        - User
      summary: Get all flights added to user
      description: Returns a list of all flights
      security:
        - bearerAuth: []
      responses:
        200:
          description: A list of flights
          content:
            application/json:
              schema:
                example:
                  flights: 
                    - departure_time: "08:40"
                      arrival_time: "10:50"
                      date: "27/03/2001"
                      departure_location: "LPA"
                      arrival_location: "AOK"
                      id: "123123y17887dsfjibq881"
                    - departure_time: "10:40"
                      arrival_time: "13:50"
                      date: "27/03/2001"
                      departure_location: "LPA"
                      arrival_location: "AOK"
                      id: "123123y17887dsfjibq881"
                    - departure_time: "11:25"
                      arrival_time: "14:10"
                      date: "27/03/2001"
                      departure_location: "LPA"
                      arrival_location: "AOK"
                      id: "123123y17887dsfjibq881"
        404:
          description: No flights found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - User
      summary: Add a flight ticket to user flights
      description: Post a flight ticket to user flights
      security:
        - bearerAuth: []
      parameters:
          - name: id
            in: query
            required: true
            description: Flight code
            schema:
              type: string
              example: "1293761yyr1237a"
      responses:
        200:
          description: Flight added correctly
          content:
            application/json:    
              schema:
                example:
                  flights: ok
        500:
          description: Server error, not your fault
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - User
      summary: Delete a flight
      description: Delete a flight from user flights
      security:
        - bearerAuth: []
      responses:
        200:
          description: Flight deleted
          content:
            application/json:    
              schema:
                example:
                  delete: Flight deleted
        500:
          description: Server error, not your fault
          content:
            application/json:    
              schema:
                example:
                  message: Flight not found
  /special_offers:
    get:
      tags:
        - Flights
      summary: Get special offers which can interest the user
      description: Returns a list of some special flight offers that stand out for being affordable
      responses:
        200:
          description: A list of special offers
          content:
            application/json:
              schema:
                example:
                  flights: 
                    - departure_time: "08:40"
                      arrival_time: "10:50"
                      date: "27/03/2001"
                      departure_location: "LPA"
                      arrival_location: "AOK"
                      price: 85
                      id: "123123y17887dsfjibq881"
                    - departure_time: "10:40"
                      arrival_time: "13:50"
                      date: "27/03/2001"
                      departure_location: "LPA"
                      arrival_location: "AOK"
                      price: 80
                      id: "123123y17887dsfjibq881"
                    - departure_time: "11:25"
                      arrival_time: "14:10"
                      date: "27/03/2001"
                      departure_location: "LPA"
                      arrival_location: "AOK"
                      price: 90
                      id: "123123y17887dsfjibq881"
        404:
          description: No special offers found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


