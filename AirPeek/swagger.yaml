openapi: "3.0.0"
info:
  version: 1.0.0
  title: DashboardAPI
servers:
  - url: http://localhost:8000
paths:
  /login:
    get:
      summary: Login to the app
	 parameters:
		- name: email
		  in: query
		  required: true
		  description: The email of the user
		  schema:
		    type: string 
		- name: password
		  in: query
		  required: true
		  description: The password of the user
		  schema:
		    type: string 
      responses:
        200:
          description: Email exists and password is correct
          content:
            application/json:    
              schema:
                example:
                  - token: 19273348274832
	   404:
		description: The email doesn't exist
		content:
		  application/json:
		    schema:
			 example:
			   - token: Email already registered
	   401:
		description: The email is not valid
		content:
		  application/json:
		    schema:
			 example:
			   - token: Invalid email
	   401:
		description: The password is not valid
		content:
		  application/json:
		    schema:
			 example:
			   - token: Invalid password
  /register:
    post:
      summary: Register a new user
      parameters:
        - name: full_name
          in: query
          required: true
          description: The full name of the user
          schema:
            type: string
        - name: email
          in: query
          required: true
          description: The email of the user
          schema:
            type: string
          example: "matusalen@fpcoruna.afundacion.org"
        - name: country
          in: query
          required: true
          description: The user's home country
          schema:
            type: string
          example: "España"
        - name: password
          in: query
          required: true
          description: The user's password
          schema:
            type: string
        - name: birthdate
          in: query
          required: true
          description: The user's birthdate
          schema:
            type: integer
          example: 2001/03/24
      responses:
        200:
          description: User registered
          content:
            application/json:    
              schema:
                example:
                  - register: ok
        400:
          description: Any paramenter is not valid
          content:
            application/json:    
              schema:
                example:
                  - register: not_ok
    post:
      summary: Create a question
      parameters:
        - name: dashboardId
          in: path
          required: true
          description: The id of the dashboard in which the question will be posted
          schema:
            type: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                title: PitÃ¡goras
                description: Â¿En quÃ© consiste exactamente el teorema de PitÃ¡goras?
      responses:
        201:
          description: The question was created correctly
        400:
          description: The client request is missing one or many parameters in the body
  /api/v1/questions/{questionId}/answers:
    get:
      summary: Get all the answers belonging to a specific question, ordered from newer to older
      parameters:
        - name: questionId
          in: path
          required: true
          description: The id of the question
          schema:
            type: int
      responses:
        200:
          description: List containing all the answers to a question, ordered from newer to older
          content:
            application/json:
              schema:
                example:
                  - description: Ni idea, a mi me gusta
                    publication_date: '2022-06-07T16:24:00.153Z'
                  - description: Â¿Lofi? Â¿Eso quÃ© es?
                    publication_date: '2022-06-07T15:33:11.221Z'

    post:
      summary: Create an answer
      parameters:
        - name: questionId
          in: path
          required: true
          description: The id of the question being answered
          schema:
            type: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                description: La respuesta definitiva es 42
      responses:
        201:
          description: The answer was created correctly
        400:
          description: The client request is missing the required parameters in the body
